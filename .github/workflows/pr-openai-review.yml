name: PR AI Code Review

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Fetch Changed Code
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching PR changes..."
          gh pr diff ${{ github.event.pull_request.number }} > pr_changes.txt || echo "Error fetching diff"

          # Ensure we don't exceed API limits
          head -c 2000 pr_changes.txt > truncated_changes.txt  # Adjust size as needed

          # If the file is empty, skip AI review
          if [[ ! -s truncated_changes.txt ]]; then
            echo "No significant changes detected." > comment.txt
            exit 0
          fi

      - name: Split Input into Smaller Chunks
        run: |
          # Split the truncated file into 512-character chunks (approx 512 tokens)
          split -b 512 truncated_changes.txt chunk_
          ls chunk_* > chunk_list.txt

      - name: Get AI Review from Free API
        run: |
          echo "### AI Code Review:" > comment.txt

          for file in $(cat chunk_list.txt); do
            echo "Processing $file..."
            
            API_RESPONSE=$(curl -s -X POST "https://api-inference.huggingface.co/models/microsoft/codebert-base" \
                -H "Authorization: Bearer ${{ secrets.HUGGINGFACE_API_KEY }}" \
                -H "Content-Type: application/json" \
                -d "{\"inputs\": $(jq -Rs . < $file)}")

            # Handle AI errors
            if [[ -z "$API_RESPONSE" || "$API_RESPONSE" == "null" || "$API_RESPONSE" == *"error"* ]]; then
                echo "⚠️ AI analysis failed for $file." >> comment.txt
            else
                echo "#### Code Review for $file:" >> comment.txt
                echo "$API_RESPONSE" | jq -r . >> comment.txt
            fi
          done

      - name: Post AI Review as PR Comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENT=$(cat comment.txt)
          gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT"
